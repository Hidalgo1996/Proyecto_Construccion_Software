
package vista;


import conexion.Conexion;
import java.awt.Dimension;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.sql.*;
import javax.swing.JTable;


public class Internal_consulta_actas extends javax.swing.JInternalFrame {
    
    
    private int id_consultas;

    /**
     * Creates new form Internal_consulta_actas
     */
    public Internal_consulta_actas() {
        initComponents();
        this.setSize(new Dimension(757, 441));//Con esto le damos el tama√±o que querramos.
        
        this.setTitle("Actas de partido");//Ttiulo de la ventana
        
        //this.cargar_tabla_consulta_actas();//Me carga la tabla en el table
        
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_actas_partidos = new javax.swing.JTable();
        boton_consulta = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Actas de partido");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        Tabla_actas_partidos.setBackground(new java.awt.Color(204, 204, 204));
        Tabla_actas_partidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Tabla_actas_partidos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
        );

        boton_consulta.setBackground(new java.awt.Color(102, 102, 102));
        boton_consulta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        boton_consulta.setForeground(new java.awt.Color(255, 255, 255));
        boton_consulta.setText("Consultar");
        boton_consulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_consultaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(277, 277, 277)
                                .addComponent(boton_consulta)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(boton_consulta)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_consultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_consultaActionPerformed
        
        this.cargar_tabla_consulta_actas();//Me carga la tabla en la ventana
    }//GEN-LAST:event_boton_consultaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable Tabla_actas_partidos;
    private javax.swing.JButton boton_consulta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables


    /*
    *
    *Metodo para mostrar todas las categorias
    */
    
    private void cargar_tabla_consulta_actas(){
        
        java.sql.Connection conex=  Conexion.conectar();
        
        DefaultTableModel modelo= new DefaultTableModel();//Instancia
        
        
        String sql= "select id_acta_partido, hora_inicio_partido, hora_fin_partido, equipo_rival,"
                + "equipo_local, duracion_partido, num_gole_equip_rival, num_gole_equip_local,"
                + "equipo_ganador, arbitro_id_arbitro1 from acta_partido;";//Guardara el script
        
        Statement declaracion;
        
        
        try {
            
            
            declaracion= (Statement) conex.createStatement();
            ResultSet result= declaracion.executeQuery(sql);//Aqui se ejecuta el query que se paso
                                                         //como parametro sql.
                                                         
                                                       
                                                         
            //Aqui pasamos el modelo a la tabla de la ventana internal categorias
            Internal_consulta_actas.Tabla_actas_partidos= new JTable(modelo);
            
            Internal_consulta_actas.jScrollPane1.setViewportView(Internal_consulta_actas.Tabla_actas_partidos);
            
            //Aqui agregamos las columnas de la tabla
            modelo.addColumn("id_acta_partido");
            modelo.addColumn("hora_inicio_partido");
            modelo.addColumn("hora_fin_partido");
            modelo.addColumn("equipo_rival");
            modelo.addColumn("equipo_local");
            modelo.addColumn("duracion_partido");
            modelo.addColumn("num_gole_equip_rival");
            modelo.addColumn("num_gole_equip_local");
            modelo.addColumn("equipo_ganador");
            modelo.addColumn("arbitro_id_arbitro1");
            
            
            //Bucle while
            while(result.next()){
                
                Object fila[]= new Object[10];//Esto me va llenando las columnas
                
                
                //Bucle for para ir aumentando el numero de filas
                for(int i=0; i<10; i++){
                    
                    fila[i]= result.getObject(i+1);
                }
                
                modelo.addRow(fila);//Anado los registros por fila
            }
            
            //cerrar conexion
            conex.close();
            
        } catch (SQLException e) {
            
            System.out.println("Error al llenar la tabla de actas"+ e);
        }
        
    }


}
